include" demos/robots/imph.4k"
: fconst : rliteral postpone >f postpone ; ;
: i>>f i>f >f ;

| Let's bind some C library symbols




: i>>f i>f >f ;


2 const SDL_OPENGL

: imports ( -- )
    " libc.so" lib " _exit" sym rcell add-handle
    " /usr/lib/libGL.so" lib " glClear"                sym 1 rcells add-handle
    " /usr/lib/libGL.so" lib " glClearColor"           sym 4 rcells add-handle
    " /usr/lib/libGL.so" lib " glColorMaterial"        sym 2 rcells add-handle
    " /usr/lib/libGL.so" lib " glDisable"              sym 1 rcells add-handle
    " /usr/lib/libGL.so" lib " glEnable"               sym 1 rcells add-handle
    " /usr/lib/libGL.so" lib " glFrustum"              sym 12 rcells add-handle
    " /usr/lib/libGL.so" lib " glGetFloatv"            sym 2 rcells add-handle
    " /usr/lib/libGL.so" lib " glLightfv"              sym 3 rcells add-handle
    " /usr/lib/libGL.so" lib " glLoadIdentity"         sym 0 rcells add-handle
    " /usr/lib/libGL.so" lib " glMatrixMode"           sym 1 rcells add-handle
    " /usr/lib/libGL.so" lib " glPopMatrix"            sym 0 rcells add-handle
    " /usr/lib/libGL.so" lib " glPushMatrix"           sym 0 rcells add-handle
    " /usr/lib/libGL.so" lib " glRotatef"              sym 4 rcells add-handle
    " /usr/lib/libGL.so" lib " glScalef"               sym 3 rcells add-handle
    " /usr/lib/libGL.so" lib " glShadeModel"           sym 1 rcells add-handle
    " /usr/lib/libGL.so" lib " glTranslatef"           sym 3 rcells add-handle
    " /usr/lib/libglut.so" lib " gluCylinder"          sym 9 rcells add-handle
    " /usr/lib/libglut.so" lib " gluLookAt"            sym 18 rcells add-handle
    " /usr/lib/libglut.so" lib " gluNewQuadric"        sym 0 rcells add-handle
    " /usr/lib/libSDL.so" lib " SDL_GL_SwapBuffers"    sym 0 rcells add-handle
    " /usr/lib/libSDL.so" lib " SDL_PollEvent"         sym 1 rcells add-handle
    " /usr/lib/libSDL.so" lib " SDL_Quit"              sym 0 rcells add-handle
    " /usr/lib/libSDL.so" lib " SDL_SetVideoMode"      sym 4 rcells add-handle
    " /usr/lib/libGL.so" lib " glColor4ubv"           sym 1 rcells add-handle
    " /usr/lib/libGL.so" lib " glMaterialfv"           sym 3 rcells add-handle
    " /usr/lib/libglut.so" lib " gluQuadricDrawStyle"  sym 2 rcells add-handle
    " /usr/lib/libglut.so" lib " gluQuadricNormals" sym 2 rcells add-handle
    " /usr/lib/libglut.so" lib " gluQuadricOrientation" sym 2 rcells add-handle
    " /usr/lib/libglut.so" lib " gluDisk" sym 7 rcells add-handle
    " /usr/lib/libGL.so" lib " glScalef" sym 3 rcells add-handle
;


| this for making happy my ans-loving Emacs mode ;) ( but I really like the | for a comment )
: \ postpone | ; immediate

\ some constants
800 const width
600 const height
32  const bpp
bpp 8 / const point

\ SDL constants
27  const Esc
2   const Keydown

\ SDL structure dispatch
: e>type c@ ;
: e>key 8 + c@ ;
: s>pixels 20 + @ ;

\ out screen surface
variable screen
\ allot needed stuff for SDL
create event 20 cells allot
\ and for pallete
create pallete 256 rcells allot

\ set the video mode
: video SDL_OPENGL bpp height width SDL_SetVideoMode ;


| : main
|    video
|    render-loop
|    init-pallete
|    video screen !
|    draw
|    render-loop
    |    0 exit
|    SDL_Quit
| ;

| save-image im.4ki




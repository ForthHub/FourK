| For an interactive session
forget
mark

| ...
4 #ithere !

require" demos/robots/gl.4k"

| Some needed constants
100012 const GLU_FILL
$1D00 const  GLU_FLAT
$1D01 const  GL_SMOOTH
100000 const GLU_SMOOTH
$1D00 const GL_FLAT
$00000100 const GL_DEPTH_BUFFER_BIT			
$00004000 const GL_COLOR_BUFFER_BIT
$1700 const GL_MODELVIEW
$1701 const GL_PROJECTION
$0B50 const GL_LIGHTING
$4001 const GL_LIGHT1
$0BA1 const GL_NORMALIZE
$1602 const GL_AMBIENT_AND_DIFFUSE
$0408 const GL_FRONT_AND_BACK
$1600 const GL_EMISSION
$1201 const GL_DIFFUSE
$0B57 const GL_COLOR_MATERIAL
$1202 const GL_SPECULAR
$0B71 const GL_DEPTH_TEST
$0007 const GL_QUADS
$0BE2 const GL_BLEND
$0BE1 const GL_BLEND_SRC
$0BE0 const GL_BLEND_DST
$1 const					GL_ONE
$0 const					GL_ZERO
$303 const			GL_ONE_MINUS_SRC_ALPHA
$0302 const GL_SRC_ALPHA
$0304 const				GL_DST_ALPHA
$0308 const			GL_SRC_ALPHA_SATURATE


| Some colors (should be HSV)
create light data: 1.0 , 1.0 , 1.0 , 1.0 , data;
create light_s data: 0.0 , 0.0 , 0.0 , 1.0 , data;

create light_pos data: 1.0 , 0.0 , 0.0 , 10.0 , data;
1203 const GL_POSITION
create up-vec data: 0.0 , 1.0 , 0.0 , data;

create solid
data:
1.0 , 1.0 , 1.0 , 1.0 ,
data;

create solid2 data: 0.0 , 0.0 , 0.0 , 1.0 , data;

create board 8 8 * allot

variable BlacksColor
variable WhitesColor

: place 8 * + board + ;
: place! place c! ;
: place@ place c@ ;
: black $8 or ;
: reset-board
    7 0 do 7 0 do 0 i j place! loop loop
    7 0 do 1 i 1 place! 1 black i 6 place! loop
    3 0 do
	i 2 + i 0 place!
	i 2 black + i 7 place!
	i 2 black + 7 i - 7 place!
	i 2 + dup 5 = if drop 6 then 7 i - 0 place!
	i 2 + dup 5 = if drop 6 then black  7 i - 7 place!
    loop
;






| This is sort of messy
require" demos/robots/stack.4k"
| require" demos/robots/synth.4k"


| Mutable time ;-)
variable time
: F SDL_GetTicks dup time @ - swap time ! ;

variable #cf

variable #cmove
0 #cmove !
create Moves
data:
4 c, 1 c, 4 c, 3 c,
4 c, 6 c, 4 c, 4 c,

5 c, 0 c, 2 c, 3 c,
3 c, 6 c, 3 c, 5 c,

3 c, 0 c, 7 c, 4 c,
2 c, 7 c, 7 c, 2 c,

|
5 c, 6 c, 5 c, 10 c,
7 c, 4 c, 5 c, 6 c,

2 c, 7 c, 7 c, 2 c,




data;
: move #cf @ 4 * Moves + ;
: from dup c@ swap 1+ c@ ;
: to 2 + from ;

: place-checker move from place@ move to place! 0 move from place! ;

| Camera neaty-cutie stuff
require" demos/robots/camera.4k"

| our construction
: init gluNewQuadric cylinder ! gluNewQuadric disc !

;

| Simulate time flow
: T 1000 i>>f F i>>f f/ ;
: TT >r 1000 i>>f r> i>>f f/ ;

| some conv word
: i>d i>f f>d ;

| looking helper
: eye
    >r >r >r >r >r >r
    GL_MODELVIEW glMatrixMode drop
    glLoadIdentity drop
    up-vec 2 rcells + @ f>d
    up-vec 1 rcells + @ f>d
    up-vec 0 rcells + @ f>d
    r> f>d r>  f>d r> f>d
    | T fsincos 6 i>>f f* f> f>d 0  f>d 6 i>>f f* f> f>d gluLookAt drop
     r> f>d r> f>d r> f>d gluLookAt drop
 |   0    f>d 0   f>d 15.0 f>d gluLookAt drop
|     10.0 f>d 0    f>d 0   f>d gluLookAt drop
;

: Looking 10.0 T fsincos 12 i>>f f* f> 12 i>>f f* f> ;
: lookat
    0 0 0 Looking eye ;

: proj
    GL_PROJECTION glMatrixMode drop
    glLoadIdentity drop
    1000.0 f>d 1.1 f>d 0.66 f>d -0.66 f>d 1.00 f>d -1.00 f>d glFrustum drop
    GL_MODELVIEW glMatrixMode drop
;   

create color1
data:
| 200 c, 128 c, 0  c, 128 c,
0 c, 0 c, 0  c, 0 c,
data;

create color4
data:
160 c, 80 c, 0  c, 128 c,
data;

create color2
data:
200 c, 200 c, 200  c, 128 c,
data;

create color3
data:
60 c, 150 c, 30  c, 0 c,
data;

create black
data:
0 c, 0 c, 0  c, 255 c,
data;


: RotY >r 1 Y 3>f r> i>f Rot ;
: RotZ >r 1 Z 3>f r> i>f Rot ;

: Join ( p1 p2 -- )
    pp2 ! pp1 !
    | pp1 @ pp2 @ >r * 2 / r> height @ * -2 / + w>d> 0 0 glTranslatef drop
    pp1 @ * 2 / w>d> 0 0 glTranslatef drop
    | 64 w>d f> 0 0 glTranslatef drop
;

: Arm0 ( size -- height )
    24 Scale 4 Tess dup Bottom 100 * 150 / Top Prim
;

: Cylinder Size Height Prim ;

: Tile 4 Tess 10 50 Cylinder ;

: Board
    color1 Color
    4 Tess 32 400 Cylinder
    p3 p1 Join
    -350 X By -350 Y By
    7 0 do
	7 0 do
	    Begin i j + 1 and 0= if 4 color4 else 8 color2 then Color 100 j * X By 100 i * Y By Tile End
	loop
    loop
;

: Table color3 Color 20 Tess 32 800 Cylinder ;
    
\ | finit clear 3 6 5 eye  Base p3 p1 Join -30 RotY 16 8 Cylinder update

: Fade
    GL_BLEND glEnable drop
    GL_DEPTH_TEST glDisable drop
    GL_SRC_ALPHA GL_ONE_MINUS_SRC_ALPHA glBlendFunc drop
    GL_MODELVIEW glMatrixMode drop
    glPushMatrix drop
    glLoadIdentity drop
    GL_PROJECTION glMatrixMode drop
    glPushMatrix drop
    glLoadIdentity drop
    GL_QUADS glBegin drop
    black 3 + !
    black glColor4ubv drop
    -1 -1 -1 glVertex3i drop
    -1 1 -1  glVertex3i drop
    -1 1 1   glVertex3i drop
    -1 -1 1   glVertex3i drop
    glEnd drop
    glPopMatrix drop
    GL_MODELVIEW glMatrixMode drop
    glPopMatrix drop
    GL_DEPTH_TEST glEnable drop
    GL_BLEND glDisable drop
;

: dupf f> dup >f >f ;

: Linear ( a b -- rf ) FF @ TT i>>f f* i>>f f+ f> ;
: Linear/ FF @ TT i>>f fswap f/ i>>f f+ f> ;
: Fader 1 50 Linear f>i Fade ;
: Up
    3>f
    up-vec 2 rcells + !
    up-vec 1 rcells + !
    up-vec 0 rcells + !
;

: UpCamera
|    1 X Up
    1.0 1.0 0 15.0 0 30 -10 Linear eye
|    Fader
;




 
: Base
    16 32 Cylinder
    20 Height 32 Bottom 24 Top p3 p1 Join Prim
    16 Height 24 Bottom 14 Top p3 p1 Join Prim
    16 Height 14 Bottom 24 Top p3 p1 Join Prim
    p3 p1 Join 8 24 Cylinder
;

: Pawn
    Base
    p3 p1 Join 4 16 Cylinder
    p3 p1 Join 16 Height 8 Z By Sphere
    p3 p1 Join 0 Top 4 Bottom Prim
;

: Bishop
    Base
    p3 p1 Join 8 24 Cylinder
    40 Height 8 Top 14 Bottom p3 p1 Join Prim
    p3 p1 Join 16 Height 8 Z By Sphere
;

: Knight
    Base
    p3 p1 Join 4 16 Cylinder
    p3 p1 Join 4 Tess 32 Height 14 Bottom 10 Top Prim
    p3 p1 Join 16 Height 4 Z By Sphere
    Begin p1 p1 Join 48 Height 24 Scale 6 Top 12 Bottom 90 RotZ 90 RotY 4 Tess Prim End
    p3 p1 Join 0 Top 4 Bottom 16 Height Prim
;

: Queen
    Base
    4 0 do Begin i 72 * RotZ p3 p1 Join 30 RotX 64 Height 8 Bottom 4 Top Prim 10 Height WhitesColor @ Color p3 p1 Join Sphere BlacksColor @ Color End loop
	WhitesColor @ Color
;

: King
    Base 32 Height Sphere
    BlacksColor @ Color
    64 Height 4 Tess 10 Size p3 p1 Join Prim
    p2 p2 Join 90 RotY 64 Height 4 Tess 10 Size  Prim
	WhitesColor @ Color
;


: Rook
    Base 
| More general loop would be needed here, temporary workaround
    4 4 2 do 16 Height dup 6 * Bottom dup 6 * 100 * 100 /  Top Prim  p3 p1 Join 1- loop
    10 Bottom 20 Top 20 Height Prim
;

: SwapColors BlacksColor @ WhitesColor @ BlacksColor ! WhitesColor ! ;

| this bit should be really done in different way but due to the current limitations in compiler it is not possible
| do it in array (the words will be optimised out) and dispatch it
| also didn't have much time to add `case of' construct

: Draw ( n -- )
    dup $8 and 0= 0= dup >r if SwapColors then
    dup $7 and
    WhitesColor @ Color
    dup 1 = if Pawn then
    dup 2 = if Rook then
    dup 3 = if Knight then
    dup 4 = if Bishop then
    dup 5 = if Queen then
    dup 6 = if King then
    drop
    r> if SwapColors then
;
    

: nip swap drop ;
: Mover
    0 >r >r 0 >r >r
    i 100 * 33 move to drop move from drop  - * Linear f>i X By
    j 100 * 33 move to nip move from nip - * Linear f>i Y By
    i j place@ Draw
    r> r> r> r> drop drop drop
;

: Checkers2
    7 0 do
	7 0 do
	    Begin
		finit
		move from j = swap i = and
		if
		    i j Mover
		else
		    i 100 * X By
		    j 100 * Y By
		    i j place@ Draw
		then
		End
	    loop
	loop
    ;


: Checkers
    7 0 do
	    Begin
		100 Y By
		i 100 * X By
		Pawn
	    End
	    Begin	
		700 Y By
		i 100 * X By
		End
	    loop
	Begin 0 X By Rook End
	Begin 100 X By Knight End
	Begin 200 X By Bishop End
        Begin 300 X By Queen End
	Begin 400 X By King End
	Begin 500 X By Bishop End
	Begin 600 X By Knight End
	Begin 700 X By Rook End
	;

: Scene
    finit
    Begin
	Table
	p3 p1 Join 
	Board
	WhitesColor @ Color
	Checkers2
|	SwapColors
	WhitesColor @ Color
|	700 Y By 700 X By 180 RotZ Checkers
|	SwapColors
    End
;

: BaseCamera
    >r >r 1 X Up
    0.0 1.0 1.0
    20.0 
    r> r> Linear 0 eye
    Scene
    Fader
;

: WhitesCamera
       -30 12 BaseCamera
|      -15 0 BaseCamera
;
: BlacksCamera
     30 -12 BaseCamera
|    -15 0 BaseCamera
|        0 0 BaseCamera
;


3 s Frame: f1 WhitesCamera
3 s Frame: f2 BlacksCamera
| 200 ms Frame: f3 ccam
| 300 ms Frame: f4 acam



Script: camera
10 0
do
    f1
    f2
loop
    
 ;

: clear
    0 0.0 0 0 glClearColor drop
    GL_DEPTH_BUFFER_BIT GL_COLOR_BUFFER_BIT or glClear drop
;

: update
    SDL_GL_SwapBuffers drop
;

: render
    | time @ 1+ time !
    clear
    proj
|    GL_LIGHTING glEnable drop
    let-there-be-light
|    Scene
    camera
    | time @ Fade
    update
;
: render-loop
    begin
	event SDL_PollEvent 0= invert
	if
	    event e>type Keydown = if event e>key Esc = if ;; then then
	then
	render
|	SDL_GetTicks .
    again
;
\ : a-sound
\ |    imports
\     reset
\     0 sample !

\ |    " HiHat" find
\      sound
\     " play test.wav" >cstr system
\   |  0 exit
\ ;

: main
color4 BlacksColor !
color2 WhitesColor !
    reset-board

    |    0 if
    4 #ithere !
    WhitesColor @ Color
    finit
    imports
    SDL_GetTicks time !
    video
    init
    Init-Cam
    Default
    render-loop
    SDL_Quit drop
;

| : a main main ;

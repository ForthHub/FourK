
(* 
	sections for the imports	
	------------------------

	As the imports have some kind of a 
	relational association of elements,
	they are are split into three sections
	one is for the names of libraries,
	another for the names of functions 
	and the last is for the relation
	between the two
*)
section libraries 
100 allot | why 100 bytes? because that's 5*20
          | I assumed, that a library name is about 20 bytes long

section functions 
512 allot

section relations
256 rcell * allot 

variable #functions
variable #libraries
variable relIndex


variable symbols-ptr | offset, let be offsets in the future begin with $
variable symbols

: symbol ( str c -- ) 
  there @ >r symbols-ptr @ there !  
  1+ inline 2drop there @ symbols-ptr ! r> there ! 0 symbols-ptr @ 1+ c!
;
 
: next-symbol ( symbol -- symbol+1 ) dup count + 1+ ; 
: in-section ( n -- ) th table in :pointer @ symbols ! ; | search in nth-section

: search ( str c -- index ) 0 >r symbols @ >r
  begin
   2dup r count 0 = if r> 2drop 2drop r> 2drop -1 ;; then 
   r dup count str= if 2drop r> drop r> ;; then 
    r> next-symbol r> 1+ >r >r       
  repeat 
;

: new-sym-in-section ( str c str c -- ) 
  find-section th table in >r r :pointer @ r :offset @ +  
  symbols-ptr ! symbol symbols-ptr @ r :pointer @ - r> :offset !
;

(* relations
   ---------
   consists of three valuse, one index of the lib section,
   one index of the func section and one stackfix

  stackfix | function index | library index

*)

: add-relation ( lindx findx stackfix -- ) 
  " relations" find-section th table in >r r :pointer @ r :offset @ + 
  r :offset @ 3 + r> :offset ! there @ >r there ! 
  there: c, c, c, ;there r> there ! 
;

: new-func ( str c -- ) 
  " functions" new-sym-in-section 
;
: new-lib ( str c -- ) 
  " libraries" new-sym-in-section
;

: search-funcs ( str c -- index ) 
  " functions" find-section in-section search 
;

: search-libs ( str c -- index )
  " libraries" find-section in-section search
;

(* | test code
" foo" new-func
" and" new-func
" boom" new-func
" and-boom" new-func
" developers" new-func 

" functions" find-section th table in :pointer @ .  
" developers" search-funcs . 
*)

| standard settings, as WE NEED them
" dlopen" new-func
" dlsym" new-func

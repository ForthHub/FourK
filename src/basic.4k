: while postpone branch0 here@ 0 c, ; immediate
: repeat postpone branch swap here@ - c, dup here@ swap - swap c! ; immediate
: ?dup dup if dup then ;
: case 0 ; immediate
: of postpone over postpone = postpone if postpone drop ; immediate
: endof postpone else ; immediate
: endcase' begin ?dup while postpone then repeat ; immediate
: endcase postpone drop postpone endcase' ; immediate
variable $a-var
variable $b-var
variable $c-var
variable matched
: match: 0 0 literal postpone matched postpone ! ; immediate
: |; -1 literal postpone matched postpone ! postpone endcase' 0 ; immediate
: |= postpone over postpone = postpone if postpone drop ; immediate
: -> postpone matched postpone @ postpone 0= postpone if ; immediate
: |a postpone $a-var postpone ! ; immediate
: |b postpone $b-var postpone ! ; immediate
: $a $a-var @ ;
: $b $b-var @ ;
: match; postpone endcase' ; immediate
: nip swap drop ;

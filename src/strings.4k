
variable last-symbol


create symbols
1024 allot

symbols last-symbol ! 




: symbol ( str c -- ) 
  there @ >r last-symbol @ there !  
  1+ inline 2drop there @ last-symbol ! r> there ! 0 last-symbol @ 1+ c!
;
: symbol" ( -- ) c: " parse symbol ;

: next-symbol ( symbol -- symbol+1 ) 
  dup count + 1+ 
; 
: search ( str c -- index ) 0 >r symbols >r
  begin
   2dup r count 0 = if r> 2drop 2drop r> 2drop -1 ;; then 
   r dup count str= if 2drop r> drop r> ;; then 
    r> next-symbol r> 1+ >r >r   
  repeat 
;


variable library 

symbol" dlopen"
symbol" dlsym"

: lib" ( -- ) c: " parse lib library ! ;
: func" ( stackfix  -- ) library @ c: " parse 2dup symbol sym add-handle ;

: x" c: " parse search ;



lib" libc.so.6"
rcell func" printf"
x" printf"


| a marker?
: marker? ( str c -- t|f ) " *marker*" str= ;
| get name for token n
: name> ( n -- str c ) 32 * ntab @ + dup count ;


| : forget ( -- )
|     last @ 1-
|     begin
| 	dup name> marker?
| 	if
| 	    mark there !
| 	    dup last ! rcells vtab @ + @ here !
| 	    ;;
| 	then
| 	dup 0 = if cr drop ;; then
| 	1-
|     again
| ;

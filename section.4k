forget
mark
(*
	Sections, lenght 32 bytes 
	----------------------
	| string  < 1-23 byte > + 1 Byte |
	| offset  < 4 byte >             | 
	| pointer < 4 byte>              | 
        ----------------------------------
*)

| Sections support
7 #section !

| size of section data structure
32 const section
: table ( -- ptr ) stab @ ;
: th ( section# -- ofs ) section * ;
: pointer ( section* -- sec-pointer ) section + rcell - ;
: offset ( section# -- sec-offset ) pointer rcell - ; 
: 1+! ( ptr -- ) 1 swap +! ;
: in ( ofs ptr -- ptr ) + ;
: >imrel ( ptr -- ofs ) imbase @ - ;
: section>  th table in ;
: current-section #section @ section> ;
: new ( str-name str-c -- )
| include the trailing zero    
    1+ 
| get the address of next section
    current-section
| set the pointer relative to image start
    dup pointer there @ >imrel swap !
| increment section count
    #section 1+!
| copy the string name into section name field
    copy
| ensure that we set zero at the next section
    0 current-section !
;

: forall ( -- max min ) #section @ 1- 0 ; 
: dump ( -- ) forall do i section> dup dup count type pointer space . cr loop ;


: section ( -- ) token new ;

: find-section ( str c -- index )
   forall do 2dup i th table in dup 
   count str= if 2drop i leave ;; then loop 2drop -1 
;

: section:
    token 2dup find-section dup -1 =
    if drop ." section: : Section " type ."  not defined" cr else
	literal 2drop
	postpone here postpone @ postpone >r
	postpone dup postpone >r
	postpone pointer postpone @
	postpone r@ postpone th
	postpone here postpone !
    then
; immediate

(*
: ;section
    postpone here postpone @
    postpone r>
    postpone pointer postpone 

    postpone r> postpone here postpone !
*)
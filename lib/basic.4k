\ FourK - Concatenative, stack based, Forth like language optimised for 
\        non-interactive 4KB size demoscene presentations.

\ Copyright (C) 2009, 2010 Wojciech Meyer, Josef P. Bernhart

\ This program is free software: you can redistribute it and/or modify
\ it under the terms of the GNU General Public License as published by
\ the Free Software Foundation, either version 3 of the License, or
\ (at your option) any later version.

\ This program is distributed in the hope that it will be useful,
\ but WITHOUT ANY WARRANTY; without even the implied warranty of
\ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
\ GNU General Public License for more details.

\ You should have received a copy of the GNU General Public License
\ along with this program.  If not, see <http://www.gnu.org/licenses/>.

variable $a-var
variable $b-var
variable $c-var
variable matched
: $a $a-var @ ;
: $b $b-var @ ;

| -1 >r
| r if 10 over = if >r 11 over if >r action rdrop rdrop else r> then else r> then rdrop 0 >r then
| r if 10 over = if >r action rdrop rdrop 0 else r> then else r> then rdrop 0 >r then

| : rdrop postpone r> postpone drop ; immediate
: match: -1 literal postpone >r ; immediate
: |: postpone r postpone if 0 ; immediate
: |= postpone over postpone = postpone if postpone >r ; immediate
: clear-rstack s@ begin dup @ while postpone rdrop cell + repeat drop ;
: |a $a-var ! ;
: |b $b-var ! ;
: -> ; immediate
variable matching
: match-next -1 matching ! ;
: ;| clear-rstack 0 literal postpone matching postpone ! begin ?dup while postpone else postpone match-next postpone r> postpone then repeat postpone rdrop postpone matching postpone @ postpone >r postpone then ; immediate
: ;match postpone rdrop ; immediate

: word
    match:
    |: 10 |= 10 |= -> ." case 2 " ;|
    |: 10 |=       -> ." case 1 " ;|
    ;match
;

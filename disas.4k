\ FourK - Concatenative, stack based, Forth like language optimised for 
\        non-interactive 4KB size demoscene presentations.

\ Copyright (C) 2009, 2010 Wojciech Meyer, Josef P. Bernhart

\ This program is free software: you can redistribute it and/or modify
\ it under the terms of the GNU General Public License as published by
\ the Free Software Foundation, either version 3 of the License, or
\ (at your option) any later version.

\ This program is distributed in the hope that it will be useful,
\ but WITHOUT ANY WARRANTY; without even the implied warranty of
\ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
\ GNU General Public License for more details.

\ You should have received a copy of the GNU General Public License
\ along with this program.  If not, see <http://www.gnu.org/licenses/>.
0 const EOW_TOKEN
1 const EOD_TOKEN
2 const PREFIX_TOKEN
3 const LIT_TOKEN
4 const LIT4_TOKEN
5 const BRANCH_TOKEN  
6 const BRANCH0_TOKEN 
7 const CCALL_TOKEN
8 const LBRANCH_TOKEN
9 const LBRANCH0_TOKEN
256 const MAX_VALID_TOKEN
 

: wname ( token -- adr c ) 32 * ntab @ + dup count ;
: lit4. ." lit4: "  1+ dup @  . space rcell + ;
: lit. ." lit: "   1+ dup c@ . space 1+ ;
: prefix. ." prefix: "    1+ dup c@ MAX_VALID_TOKEN + wname type space 1+ ;
: branch. ." branch: "  1+ dup c@ . space 1+ ;
: branch0. ."  branch0: "   1+ dup c@ . space 1+  ;
: lbranch.  of ." lbranch: "  1+ dup c@ . space rcell + ;
: lbranch0. of ." lbranch0: " 1+ dup c@ . space rcell +  ;


: show ( token -- )
    c: : emit space dup wname type space
    rcells vtab @ + @
    1+
    begin
	dup c@ EOW_TOKEN <>
    while
	    dup c@
	    case
		LIT4_TOKEN     of lit4.     endof
		LIT_TOKEN      of lit.      endof
		PREFIX_TOKEN   of prefix.   endof
		BRANCH_TOKEN   of branch.   endof
		BRANCH0_TOKEN  of branch0.  endof
		LBRANCH_TOKEN  of lbranch.  endof
		LBRANCH0_TOKEN of lbranch0. endof
		wname type space 1+ dup
	    endcase
    repeat
    drop
    c: ; emit
;

: show: token find show ;